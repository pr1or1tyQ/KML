package io.github.usafa_compsci350;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.TitledBorder;

/**
 * MainWindow - creates main window GUI.
 *
 * @author Group 3
 */
public class MainWindow {
  private JButton readNetworkButton;
  private JButton generateKmlButton;
  private JPanel panel1;
  private JPanel panel2;
  private JPanel panel3;
  private JPanel panel4;
  private JPanel panel5;
  private JPanel panel6;
  private JPanel panel7;
  private JPanel panel8;
  private JPanel panel9;
  private JLabel readCityLabel;
  private JLabel readNetworkLabel;
  private JLabel generateKmlLabel;
  private JLabel cityFileName;
  private JLabel networkFileName;
  private JPanel mainPanel;
  private JButton readCityButton;
  private ArrayList<CityInfo> cityInfo = new ArrayList<CityInfo>();
  public JFrame frame = new JFrame("Main Window");

  /**
   * Main constructor
   */
  public MainWindow() {
    readCityButton.addActionListener(new ActionListener() {
      @Override
      public void actionPerformed(ActionEvent e) {
        App.log.writeToLog("Read City Button pressed");
        //Will try to parse and read in data from file
        //If exception occurs, say what exception is and exit program
        ReadCity cityReader = null;
        try {
          cityReader = new ReadCity();
          cityInfo = cityReader.readFileInfo();
        } catch (Exception error) {
          JOptionPane.showMessageDialog(null,
              error.getMessage() + "\n Press Ok to close the program",
              "ERROR WITH NETWORK FILE",
              JOptionPane.ERROR_MESSAGE);
          System.exit(1);
        }

        readCityButton.setEnabled(false);
        readNetworkButton.setEnabled(true);
        App.log.writeToLog("Read Network Button was enabled");

        cityFileName.setText(cityReader.getFileName());
      }
    });
    readNetworkButton.addActionListener(new ActionListener() {
      @Override
      public void actionPerformed(ActionEvent e) {
        App.log.writeToLog("Read Network Button pressed");
        //Will try to parse and read in data from file
        //If exception occurs, say what exception is and exit program
        ReadNetwork readNetwork = null;
        try {
          readNetwork = new ReadNetwork(cityInfo);
        } catch (Exception error) {
          JOptionPane.showMessageDialog(null,
              error.getMessage() + "\n Press Ok to close the program",
              "ERROR WITH NETWORK FILE",
              JOptionPane.ERROR_MESSAGE);
          App.log.writeToLog("ERROR: " + error.getMessage());
          System.exit(1);
        }
        //Used for testing, removed for final implementation
        /*
        System.out.println("Size of cityInfo = " + cityInfo.size());
        for (int i = 0; i < cityInfo.size(); i++) {
          System.out.println(cityInfo.get(i));
        }
        */
        readNetworkButton.setEnabled(false);
        generateKmlButton.setEnabled(true);
        App.log.writeToLog("KML button activated");

        networkFileName.setText(readNetwork.getFileName());
      }
    });
    generateKmlButton.addActionListener(new ActionListener() {
      @Override
      public void actionPerformed(ActionEvent e) {
        KmlWindow selectCities = null;
        try{
          selectCities = new KmlWindow(cityInfo);
        }catch(Exception error){
          JOptionPane.showMessageDialog(null,
                  error.getMessage() + "\n Press Ok to close the program",
                  "ERROR WITH GENERATE KML FILE",
                  JOptionPane.ERROR_MESSAGE);
          App.log.writeToLog("ERROR: " + error.getMessage());
          System.exit(1);
        }
        selectCities.openWindow();
        frame.setVisible(false);
      }
    });
  }

  /**
   * openWindow() - sets initial window settings
   */
  public void openWindow() {
    frame.setContentPane(new MainWindow().mainPanel);
    frame.setResizable(false);
    frame.setLocationRelativeTo(null);
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.pack();
    frame.setVisible(true);
  }

  {
    // GUI initializer generated by IntelliJ IDEA GUI Designer
    // >>> IMPORTANT!! <<<
    // DO NOT EDIT OR ADD ANY CODE HERE!
    setupUI();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer.
   * >>> IMPORTANT!! <<<
   * DO NOT edit this method OR call it in your code!
   *
   * @noinspection ALL
   */
  private void setupUI() {
    mainPanel = new JPanel();
    mainPanel.setLayout(
        new GridLayoutManager(3, 7, new Insets(0,
            0, 0, 0), -1, -1));
    mainPanel.setMinimumSize(new Dimension(750, 150));
    mainPanel.setPreferredSize(new Dimension(750, 150));
    mainPanel.setBorder(BorderFactory.createTitledBorder(
        BorderFactory.createLineBorder(Color.black), null,
        TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION,
        null,
        null));
    panel1 = new JPanel();
    panel1.setLayout(
        new GridLayoutManager(1, 3, new Insets(0,
            0, 0, 0), -1, -1));
    panel1.setForeground(new Color(-4473925));
    mainPanel.add(panel1,
        new GridConstraints(0, 1, 1,
            1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                | GridConstraints.SIZEPOLICY_CAN_GROW, null,
            null, null, 0,
            false));
    readCityLabel = new JLabel();
    readCityLabel.setText("Read City Information");
    panel1.add(readCityLabel,
        new GridConstraints(0, 1, 1,
            1, GridConstraints.ANCHOR_WEST,
            GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED,
            GridConstraints.SIZEPOLICY_FIXED, null,
            null, null, 0, false));
    final Spacer spacer1 = new Spacer();
    panel1.add(spacer1,
        new GridConstraints(0, 0,
            1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1,
            null, null, null, 0,
            false));
    final Spacer spacer2 = new Spacer();
    panel1.add(spacer2,
        new GridConstraints(0, 2, 1,
            1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1,
            null, null, null, 0,
            false));
    panel2 = new JPanel();
    panel2.setLayout(
        new GridLayoutManager(1, 3,
            new Insets(0, 0, 0, 0), -1, -1));
    mainPanel.add(panel2,
        new GridConstraints(0, 3, 1,
            1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                | GridConstraints.SIZEPOLICY_CAN_GROW, null,
            null, null, 0,
            false));
    readNetworkLabel = new JLabel();
    readNetworkLabel.setText("Read Network Information");
    panel2.add(readNetworkLabel,
        new GridConstraints(0, 1, 1,
            1, GridConstraints.ANCHOR_WEST,
            GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED,
            GridConstraints.SIZEPOLICY_FIXED, null,
            null, null, 0, false));
    final Spacer spacer3 = new Spacer();
    panel2.add(spacer3,
        new GridConstraints(0, 0, 1,
            1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1,
            null, null, null, 0,
            false));
    final Spacer spacer4 = new Spacer();
    panel2.add(spacer4,
        new GridConstraints(0, 2, 1,
            1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1,
            null, null, null, 0,
            false));
    panel3 = new JPanel();
    panel3.setLayout(
        new GridLayoutManager(1, 3,
            new Insets(0, 0, 0, 0), -1, -1));
    mainPanel.add(panel3,
        new GridConstraints(0, 5, 1,
            1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                | GridConstraints.SIZEPOLICY_CAN_GROW, null,
            null, null, 0,
            false));
    generateKmlLabel = new JLabel();
    generateKmlLabel.setText("Generate KML File");
    panel3.add(generateKmlLabel,
        new GridConstraints(0, 1, 1,
            1, GridConstraints.ANCHOR_WEST,
            GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED,
            GridConstraints.SIZEPOLICY_FIXED, null,
            null, null, 0, false));
    final Spacer spacer5 = new Spacer();
    panel3.add(spacer5,
        new GridConstraints(0, 0, 1,
            1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1,
            null, null, null, 0,
            false));
    final Spacer spacer6 = new Spacer();
    panel3.add(spacer6,
        new GridConstraints(0, 2, 1,
            1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1,
            null, null, null, 0,
            false));
    panel4 = new JPanel();
    panel4.setLayout(
        new GridLayoutManager(1, 1,
            new Insets(0, 0, 0, 0), -1, -1));
    mainPanel.add(panel4,
        new GridConstraints(1, 1, 1,
            1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                | GridConstraints.SIZEPOLICY_CAN_GROW, null,
            null, null, 0,
            false));
    readCityButton = new JButton();
    readCityButton.setText("Open File");
    panel4.add(readCityButton,
        new GridConstraints(0, 0,
            1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_FIXED, null,
            null, null, 0, false));
    panel5 = new JPanel();
    panel5.setLayout(
        new GridLayoutManager(1, 1,
            new Insets(0, 0, 0, 0), -1, -1));
    mainPanel.add(panel5,
        new GridConstraints(1, 3,
            1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                | GridConstraints.SIZEPOLICY_CAN_GROW, null,
            null, null, 0,
            false));
    readNetworkButton = new JButton();
    readNetworkButton.setEnabled(false);
    readNetworkButton.setText("Open File");
    panel5.add(readNetworkButton,
        new GridConstraints(0, 0, 1,
            1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_FIXED, null,
            null, null, 0, false));
    panel6 = new JPanel();
    panel6.setLayout(
        new GridLayoutManager(1, 1,
            new Insets(0, 0, 0, 0), -1, -1));
    mainPanel.add(panel6,
        new GridConstraints(1, 5,
            1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                | GridConstraints.SIZEPOLICY_CAN_GROW, null,
            null, null, 0,
            false));
    generateKmlButton = new JButton();
    generateKmlButton.setEnabled(false);
    generateKmlButton.setText("Generate KML");
    panel6.add(generateKmlButton,
        new GridConstraints(0, 0,
            1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_FIXED, null,
            null, null, 0, false));
    panel7 = new JPanel();
    panel7.setLayout(
        new GridLayoutManager(1, 3,
            new Insets(0, 0, 0, 0), -1, -1));
    mainPanel.add(panel7,
        new GridConstraints(2, 1,
            1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                | GridConstraints.SIZEPOLICY_CAN_GROW, null,
            null, null, 0,
            false));
    cityFileName = new JLabel();
    cityFileName.setText("City File Name");
    panel7.add(cityFileName,
        new GridConstraints(0, 1,
            1, 1, GridConstraints.ANCHOR_WEST,
            GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED,
            GridConstraints.SIZEPOLICY_FIXED, null,
            null, null, 0, false));
    final Spacer spacer7 = new Spacer();
    panel7.add(spacer7,
        new GridConstraints(0, 0, 1,
            1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1,
            null, null, null, 0,
            false));
    final Spacer spacer8 = new Spacer();
    panel7.add(spacer8,
        new GridConstraints(0, 2,
            1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1,
            null, null, null, 0,
            false));
    panel8 = new JPanel();
    panel8.setLayout(
        new GridLayoutManager(1, 3,
            new Insets(0, 0, 0, 0), -1, -1));
    mainPanel.add(panel8,
        new GridConstraints(2, 3,
            1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                | GridConstraints.SIZEPOLICY_CAN_GROW, null,
            null, null, 0,
            false));
    networkFileName = new JLabel();
    networkFileName.setText("Network File Name");
    panel8.add(networkFileName,
        new GridConstraints(0, 1, 1,
            1, GridConstraints.ANCHOR_WEST,
            GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED,
            GridConstraints.SIZEPOLICY_FIXED, null,
            null, null, 0, false));
    final Spacer spacer9 = new Spacer();
    panel8.add(spacer9,
        new GridConstraints(0, 0, 1,
            1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1,
            null, null, null, 0,
            false));
    final Spacer spacer10 = new Spacer();
    panel8.add(spacer10,
        new GridConstraints(0, 2,
            1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1,
            null, null, null, 0,
            false));
    panel9 = new JPanel();
    panel9.setLayout(
        new GridLayoutManager(1, 3,
            new Insets(0, 0, 0, 0), -1, -1));
    mainPanel.add(panel9,
        new GridConstraints(2, 5, 1,
            1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_BOTH,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                | GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                | GridConstraints.SIZEPOLICY_CAN_GROW, null,
            null, null, 0,
            false));
    final Spacer spacer11 = new Spacer();
    panel9.add(spacer11,
        new GridConstraints(0, 0, 1,
            1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1,
            null, null, null, 0,
            false));
    final Spacer spacer12 = new Spacer();
    panel9.add(spacer12,
        new GridConstraints(0, 2,
            1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1,
            null, null, null, 0,
            false));
    final Spacer spacer13 = new Spacer();
    mainPanel.add(spacer13,
        new GridConstraints(1, 2, 1,
            1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1,
            null, null, null, 0,
            false));
    final Spacer spacer14 = new Spacer();
    mainPanel.add(spacer14,
        new GridConstraints(1, 4, 1,
            1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1,
            null, null, null, 0,
            false));
    final Spacer spacer15 = new Spacer();
    mainPanel.add(spacer15,
        new GridConstraints(1, 6, 1,
            1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1,
            null, null, null, 0,
            false));
    final Spacer spacer16 = new Spacer();
    mainPanel.add(spacer16,
        new GridConstraints(1, 0, 1,
            1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1,
            null, null, null, 0,
            false));
  }

  /**
   * @noinspection ALL.
   */
  public JComponent getRootComponent() {
    return mainPanel;
  }

  {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer
   * >>> IMPORTANT!! <<<
   * DO NOT edit this method OR call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    mainPanel = new JPanel();
    mainPanel.setLayout(
        new GridLayoutManager(3, 7, new Insets(0, 0, 0, 0), -1, -1));
    mainPanel.setMinimumSize(new Dimension(750, 150));
    mainPanel.setPreferredSize(new Dimension(750, 150));
    mainPanel.setBorder(BorderFactory.createTitledBorder(
        BorderFactory.createLineBorder(Color.black), null,
        TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null,
        null));
    panel1 = new JPanel();
    panel1.setLayout(
        new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
    panel1.setForeground(new Color(-4473925));
    mainPanel.add(panel1,
        new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK |
            GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK |
                GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0,
            false));
    readCityLabel = new JLabel();
    readCityLabel.setText("Read City Information");
    panel1.add(readCityLabel,
        new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST,
            GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED,
            GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    final Spacer spacer1 = new Spacer();
    panel1.add(spacer1,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0,
            false));
    final Spacer spacer2 = new Spacer();
    panel1.add(spacer2,
        new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0,
            false));
    panel2 = new JPanel();
    panel2.setLayout(
        new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
    mainPanel.add(panel2,
        new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK |
            GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK |
                GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0,
            false));
    readNetworkLabel = new JLabel();
    readNetworkLabel.setText("Read Network Information");
    panel2.add(readNetworkLabel,
        new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST,
            GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED,
            GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    final Spacer spacer3 = new Spacer();
    panel2.add(spacer3,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0,
            false));
    final Spacer spacer4 = new Spacer();
    panel2.add(spacer4,
        new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0,
            false));
    panel3 = new JPanel();
    panel3.setLayout(
        new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
    mainPanel.add(panel3,
        new GridConstraints(0, 5, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK |
            GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK |
                GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0,
            false));
    generateKmlLabel = new JLabel();
    generateKmlLabel.setText("Generate KML File");
    panel3.add(generateKmlLabel,
        new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST,
            GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED,
            GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    final Spacer spacer5 = new Spacer();
    panel3.add(spacer5,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0,
            false));
    final Spacer spacer6 = new Spacer();
    panel3.add(spacer6,
        new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0,
            false));
    panel4 = new JPanel();
    panel4.setLayout(
        new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
    mainPanel.add(panel4,
        new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK |
            GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK |
                GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0,
            false));
    readCityButton = new JButton();
    readCityButton.setText("Open File");
    panel4.add(readCityButton,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_CAN_SHRINK |
                GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    panel5 = new JPanel();
    panel5.setLayout(
        new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
    mainPanel.add(panel5,
        new GridConstraints(1, 3, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK |
            GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK |
                GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0,
            false));
    readNetworkButton = new JButton();
    readNetworkButton.setEnabled(false);
    readNetworkButton.setText("Open File");
    panel5.add(readNetworkButton,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_CAN_SHRINK |
                GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    panel6 = new JPanel();
    panel6.setLayout(
        new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
    mainPanel.add(panel6,
        new GridConstraints(1, 5, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK |
            GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK |
                GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0,
            false));
    generateKmlButton = new JButton();
    generateKmlButton.setEnabled(false);
    generateKmlButton.setText("Generate KML");
    panel6.add(generateKmlButton,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_CAN_SHRINK |
                GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    panel7 = new JPanel();
    panel7.setLayout(
        new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
    mainPanel.add(panel7,
        new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK |
            GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK |
                GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0,
            false));
    cityFileName = new JLabel();
    cityFileName.setText("City File Name");
    panel7.add(cityFileName,
        new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST,
            GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED,
            GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    final Spacer spacer7 = new Spacer();
    panel7.add(spacer7,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0,
            false));
    final Spacer spacer8 = new Spacer();
    panel7.add(spacer8,
        new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0,
            false));
    panel8 = new JPanel();
    panel8.setLayout(
        new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
    mainPanel.add(panel8,
        new GridConstraints(2, 3, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK |
            GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK |
                GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0,
            false));
    networkFileName = new JLabel();
    networkFileName.setText("Network File Name");
    panel8.add(networkFileName,
        new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST,
            GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED,
            GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    final Spacer spacer9 = new Spacer();
    panel8.add(spacer9,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0,
            false));
    final Spacer spacer10 = new Spacer();
    panel8.add(spacer10,
        new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0,
            false));
    panel9 = new JPanel();
    panel9.setLayout(
        new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
    mainPanel.add(panel9,
        new GridConstraints(2, 5, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK |
            GridConstraints.SIZEPOLICY_CAN_GROW,
            GridConstraints.SIZEPOLICY_CAN_SHRINK |
                GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0,
            false));
    final Spacer spacer11 = new Spacer();
    panel9.add(spacer11,
        new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0,
            false));
    final Spacer spacer12 = new Spacer();
    panel9.add(spacer12,
        new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0,
            false));
    final Spacer spacer13 = new Spacer();
    mainPanel.add(spacer13,
        new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0,
            false));
    final Spacer spacer14 = new Spacer();
    mainPanel.add(spacer14,
        new GridConstraints(1, 4, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0,
            false));
    final Spacer spacer15 = new Spacer();
    mainPanel.add(spacer15,
        new GridConstraints(1, 6, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0,
            false));
    final Spacer spacer16 = new Spacer();
    mainPanel.add(spacer16,
        new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER,
            GridConstraints.FILL_HORIZONTAL,
            GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0,
            false));
  }

  /**
   * @noinspection ALL
   */
  public JComponent $$$getRootComponent$$$() {
    return mainPanel;
  }

}
